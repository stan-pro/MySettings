" Must come first because it changes other options.
set nocompatible

" Pathogen.
filetype off
call pathogen#helptags()
call pathogen#runtime_append_all_bundles()
filetype plugin indent on

" GUI settings.
if has('gui_running')
  if has("gui_macvim")
    set guifont=Menlo:h16
  elseif has("gui_gtk2")
    set guifont=Inconsolata\ 12
  elseif has("gui_win32")
    set guifont=Consolas:h11:cANSI
  endif "end 'gui_macvim'

  " MacVim: smooth fonts.
  set antialias

  " Autoselect + use console dialogs.
  set guioptions=aAc

  " Hide toolbar.
  set guioptions-=T

  " Don't show right scrollbar.
  set guioptions-=r

  " Window dimensions.
  set lines=60 columns=120
else
  set background=dark
endif "end 'gui_running'

if has('win32')
  source $VIMRUNTIME/mswin.vim
  behave mswin
  set makeprg=nmake
  compiler msvc
else
  set makeprg=make
  compiler gcc
endif "end 'win32'

" Russian language (Apple keyboard).
set keymap=russian-jcukenmac

" Use UTF-8 everywhere.
set encoding=utf-8

" Encodings and filetypes order.
set ffs=unix,dos,mac
set fencs=utf-8,cp1251,koi8-r,ucs-2,cp866

" Ignore these files when completing.
set wildignore+=*.o,*.obj,.git,*.pyc
set wildignore+=eggs/**
set wildignore+=*.egg-info/**

" Replace the default grep program with ack.
set grepprg=ack

" -*- Status Line Settings -*-
" Buffer number.
set statusline=[%n]

" Tail of the filename.
set statusline+=[%t]

" File encoding.
set statusline+=[%{strlen(&fenc)?&fenc:'none'},

" File format.
set statusline+=%{&ff}]

" Help file flag.
set statusline+=%h

" Modified flag.
set statusline+=%m

" Read only flag.
set statusline+=%r

" Filetype.
set statusline+=%y

" Left/right separator.
set statusline+=%=

" Cursor column.
set statusline+=%c,

" Cursor line/total lines.
set statusline+=%l/%L

" Percent through file.
set statusline+=\ %P
" -*- End Status Line Settings. -*-

" a - terse messages (like [+] instead of [Modified].
" t - truncate file names.
" I - no intro message when starting vim fileless.
" T - truncate long messages to avoid having to hit a key.
set shortmess=atTI

" Number of screen lines to use for the command-line.
set cmdheight=2

" English default.
set iminsert=0
set imsearch=0

" Turn on syntax highlighting.
syntax enable

" Turn on file type detection.
filetype indent on


" For security reason
" http://lists.alioth.debian.org/pipermail/pkg-vim-maintainers/2007-June/004020.html
set modelines=0

" Number of colors (for terminal).
set t_Co=256

" Colorscheme.
colorscheme solarized

" Change cursor color in (lang) mode.
highlight lCursor guifg=NONE guibg=Cyan

" Set the number of lines that are remembered.
set history=512

" Fast terminal connection.
set ttyfast

" Use relative line numbers.
set relativenumber

" Use undo file <FILENAME>.un~
set undofile

" Show tab line only if there are at least two tab pages.
set showtabline=1

" For long lines.
set wrap
set textwidth=79
set colorcolumn=85
set formatoptions=qrn1

" Display incomplete commands.
set showcmd

" Display the mode you're in.
set showmode

" Intuitive backspacing.
set backspace=indent,eol,start

" Handle multiple buffers better.
set hidden

" Enhanced command line completion.
set wildmenu

" Complete files like a shell.
set wildmode=list:longest

" Case-insensitive searching.
set ignorecase

" But case-sensitive if expression contains a capital letter.
set smartcase

" Highlight matches as you type.
set incsearch

" Highlight matches.
set hlsearch

" Turn on line wrapping.
set wrap

" Show 3 lines of context around the cursor.
set scrolloff=3

" Set the terminal's title.
set title

" No beeping.
set visualbell

" No noise.
set noerrorbells

" Don't make a backup before overwriting a file.
set nobackup
set nowritebackup

" Keep swap files in one location.
set directory=$HOME/.vim/tmp//,.

" Global tab width.
set tabstop=4
set softtabstop=4
set shiftwidth=4

" Use spaces instead of tabs.
set expandtab
set smarttab

set autoindent
set cindent
set cinoptions=:s,ps,ts,cs

" Show matching brackets.
set showmatch

" Bracket blinking.
set matchtime=5

" Unprintable chars mapping.
set listchars=tab:·\ ,eol:¶,trail:·,extends:»,precedes:«

" Time to wait after ESC (default causes an annoying delay).
set timeoutlen=250

" Show the status line all the time.
set laststatus=2

" Highlight 'bad' witespaces.
highlight BadWhitespace ctermbg=red guibg=red

" Display tabs at the beginning of a line in Python mode as bad.
au BufRead,BufNewFile * match BadWhitespace /^\t\+/

" Make trailing whitespace be flagged as bad.
au BufRead,BufNewFile * match BadWhitespace /\s\+$/


" -*- Python Section -*-
" Enable OmniComplete.
au FileType python set omnifunc=pythoncomplete#Complete
" For full syntax highlighting:
let python_highlight_all=1
" -*- End of Python Section -*-

if has("gui_running")
  highlight SpellBad term=underline gui=undercurl guisp=Orange
endif

" Add the virtualenv's site-packages to vim path
py << EOF
import os.path
import sys
import vim
if 'VIRTUAL_ENV' in os.environ:
    project_base_dir = os.environ['VIRTUAL_ENV']
    sys.path.insert(0, project_base_dir)
    activate_this = os.path.join(project_base_dir, 'bin/activate_this.py')
    execfile(activate_this, dict(__file__=activate_this))
EOF

" Ruby
au FileType ruby set omnifunc=rubycomplete#Complete

" JavaScript
au FileType javascript set omnifunc=javascriptcomplete#CompleteJS

" HTML
au FileType html set omnifunc=htmlcomplete#CompleteTags

" CSS
au FileType css set omnifunc=csscomplete#CompleteCSS

